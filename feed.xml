<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="https://blog.hitlab.space/feed.xml" rel="self" type="application/atom+xml" /><link href="https://blog.hitlab.space/" rel="alternate" type="text/html" /><updated>2021-01-20T02:01:06+08:00</updated><id>https://blog.hitlab.space/feed.xml</id><title type="html">elephacking</title><subtitle>A Student, a Security Fans, a Pentester. 隨便寫寫Cyber Security，在大學學到的東西和工作學到的東西</subtitle><entry><title type="html">Welcome to Jekyll!</title><link href="https://blog.hitlab.space/jekyll/update/2021/01/20/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2021-01-20T00:47:00+08:00</published><updated>2021-01-20T00:47:00+08:00</updated><id>https://blog.hitlab.space/jekyll/update/2021/01/20/welcome-to-jekyll</id><content type="html" xml:base="https://blog.hitlab.space/jekyll/update/2021/01/20/welcome-to-jekyll.html">&lt;p&gt;You’ll find this post in your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;Jekyll requires blog post files to be named according to the following format:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;YEAR-MONTH-DAY-title.MARKUP&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Where &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;YEAR&lt;/code&gt; is a four-digit number, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MONTH&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DAY&lt;/code&gt; are both two-digit numbers, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MARKUP&lt;/code&gt; is the file extension representing the format used in the file. After that, include the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;https://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><category term="jekyll" /><category term="update" /><summary type="html">You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.</summary></entry><entry><title type="html">An Example Post</title><link href="https://blog.hitlab.space/2021/01/20/testing.html" rel="alternate" type="text/html" title="An Example Post" /><published>2021-01-20T00:00:00+08:00</published><updated>2021-01-20T00:00:00+08:00</updated><id>https://blog.hitlab.space/2021/01/20/testing</id><content type="html" xml:base="https://blog.hitlab.space/2021/01/20/testing.html">&lt;p&gt;This is the content.&lt;/p&gt;</content><author><name></name></author><summary type="html">This is the content.</summary></entry><entry><title type="html">Apache directory access control for external access</title><link href="https://blog.hitlab.space/2017/05/31/apache-directory-access-control-for-external-access.html" rel="alternate" type="text/html" title="Apache directory access control for external access" /><published>2017-05-31T00:00:00+08:00</published><updated>2017-05-31T00:00:00+08:00</updated><id>https://blog.hitlab.space/2017/05/31/apache-directory-access-control-for-external-access</id><content type="html" xml:base="https://blog.hitlab.space/2017/05/31/apache-directory-access-control-for-external-access.html">&lt;p&gt;Settings:&lt;/p&gt;

&lt;p&gt;&amp;lt;Directory /var/www/privatezone/&amp;gt;
Options -Indexes -FollowSymLinks MultiViews
AllowOverride AuthConfig
Order deny,allow
Deny from all
AuthType Digest
AuthName “internal”&lt;/p&gt;

&lt;p&gt;AuthDigestProvider file
AuthUserFile /PATH/DIGESTFILE
Require valid-user
Allow from 192.168.0.0/24 #allow access from entire network
Satisfy Any
&amp;lt;/Directory&amp;gt;&lt;/p&gt;

&lt;p&gt;Generate digest file:&lt;/p&gt;

&lt;p&gt;sudo htdigest -c /etc/apache2/.htdigest internal USERNAME&lt;/p&gt;</content><author><name></name></author><summary type="html">Settings:</summary></entry></feed>